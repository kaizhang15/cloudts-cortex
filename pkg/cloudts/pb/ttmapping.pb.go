// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: ttmapping.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TTMappingSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   uint64                 `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	TimeseriesIds []uint64               `protobuf:"varint,2,rep,packed,name=timeseries_ids,json=timeseriesIds,proto3" json:"timeseries_ids,omitempty"`
	Bitmap        *CompressedBitmap      `protobuf:"bytes,3,opt,name=bitmap,proto3" json:"bitmap,omitempty"`
	LastUpdated   int64                  `protobuf:"varint,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TTMappingSnapshot) Reset() {
	*x = TTMappingSnapshot{}
	mi := &file_ttmapping_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TTMappingSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTMappingSnapshot) ProtoMessage() {}

func (x *TTMappingSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_ttmapping_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTMappingSnapshot.ProtoReflect.Descriptor instead.
func (*TTMappingSnapshot) Descriptor() ([]byte, []int) {
	return file_ttmapping_proto_rawDescGZIP(), []int{0}
}

func (x *TTMappingSnapshot) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *TTMappingSnapshot) GetTimeseriesIds() []uint64 {
	if x != nil {
		return x.TimeseriesIds
	}
	return nil
}

func (x *TTMappingSnapshot) GetBitmap() *CompressedBitmap {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

func (x *TTMappingSnapshot) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

type CompressedBitmap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Indices       []uint32               `protobuf:"varint,1,rep,packed,name=indices,proto3" json:"indices,omitempty"`
	Pointers      []int32                `protobuf:"varint,2,rep,packed,name=pointers,proto3" json:"pointers,omitempty"`
	Rows          int32                  `protobuf:"varint,3,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols          int32                  `protobuf:"varint,4,opt,name=cols,proto3" json:"cols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompressedBitmap) Reset() {
	*x = CompressedBitmap{}
	mi := &file_ttmapping_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompressedBitmap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedBitmap) ProtoMessage() {}

func (x *CompressedBitmap) ProtoReflect() protoreflect.Message {
	mi := &file_ttmapping_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedBitmap.ProtoReflect.Descriptor instead.
func (*CompressedBitmap) Descriptor() ([]byte, []int) {
	return file_ttmapping_proto_rawDescGZIP(), []int{1}
}

func (x *CompressedBitmap) GetIndices() []uint32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

func (x *CompressedBitmap) GetPointers() []int32 {
	if x != nil {
		return x.Pointers
	}
	return nil
}

func (x *CompressedBitmap) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *CompressedBitmap) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

var File_ttmapping_proto protoreflect.FileDescriptor

const file_ttmapping_proto_rawDesc = "" +
	"\n" +
	"\x0fttmapping.proto\x12\n" +
	"cloudts.pb\"\xba\x01\n" +
	"\x11TTMappingSnapshot\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\x04R\vpartitionId\x12)\n" +
	"\x0etimeseries_ids\x18\x02 \x03(\x04B\x02\x10\x01R\rtimeseriesIds\x124\n" +
	"\x06bitmap\x18\x03 \x01(\v2\x1c.cloudts.pb.CompressedBitmapR\x06bitmap\x12!\n" +
	"\flast_updated\x18\x04 \x01(\x03R\vlastUpdated\"x\n" +
	"\x10CompressedBitmap\x12\x1c\n" +
	"\aindices\x18\x01 \x03(\rB\x02\x10\x01R\aindices\x12\x1e\n" +
	"\bpointers\x18\x02 \x03(\x05B\x02\x10\x01R\bpointers\x12\x12\n" +
	"\x04rows\x18\x03 \x01(\x05R\x04rows\x12\x12\n" +
	"\x04cols\x18\x04 \x01(\x05R\x04colsB5Z3github.com/kaizhang15/cloudts-cortex/pkg/cloudts/pbb\x06proto3"

var (
	file_ttmapping_proto_rawDescOnce sync.Once
	file_ttmapping_proto_rawDescData []byte
)

func file_ttmapping_proto_rawDescGZIP() []byte {
	file_ttmapping_proto_rawDescOnce.Do(func() {
		file_ttmapping_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ttmapping_proto_rawDesc), len(file_ttmapping_proto_rawDesc)))
	})
	return file_ttmapping_proto_rawDescData
}

var file_ttmapping_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ttmapping_proto_goTypes = []any{
	(*TTMappingSnapshot)(nil), // 0: cloudts.pb.TTMappingSnapshot
	(*CompressedBitmap)(nil),  // 1: cloudts.pb.CompressedBitmap
}
var file_ttmapping_proto_depIdxs = []int32{
	1, // 0: cloudts.pb.TTMappingSnapshot.bitmap:type_name -> cloudts.pb.CompressedBitmap
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ttmapping_proto_init() }
func file_ttmapping_proto_init() {
	if File_ttmapping_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ttmapping_proto_rawDesc), len(file_ttmapping_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ttmapping_proto_goTypes,
		DependencyIndexes: file_ttmapping_proto_depIdxs,
		MessageInfos:      file_ttmapping_proto_msgTypes,
	}.Build()
	File_ttmapping_proto = out.File
	file_ttmapping_proto_goTypes = nil
	file_ttmapping_proto_depIdxs = nil
}
